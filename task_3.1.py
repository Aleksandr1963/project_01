# Задача 3.1.
# Создайте класс матрицы (или таблицы).
# Требования к классу:
#   - каждая колонка является числом от 1 до n (n любое число, которые вы поставите!)
#   - в каждой ячейке содержится либо число, либо None
#   - доступы следующие методы матрицы:
#       * принимать новые значения,
#       * заменять существующие значения,
#       * выводить число строк и колонок.

# Пример матрицы 10 на 10 из единиц:
# [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

# Примечание!
#   - новый класс не запрещено строить на базе существующих типов данных: списков, словарей и тд.
#   - отображать в таблице/матрице название колонки не обязательно!
#   - использовать готовые классы numpy.array() и pandas.DataFrame() запрещено!
#   - проявите фантазию :)

class Matrix:
    def __init__(self, row, column):
        self.matrix =self.get_matrix(row,column)
    def get_matrix(self, row, column):
        import random
        # num = random.random.int(1,99)
        #num = 1
        matrix = [[None for j in range(column)] for i in range(row)]
        for i in range(len(matrix)):
            for j in range(len(matrix[i])):

                matrix[i][j] = random.randint(0,100) # вместо "100" можно поставить любое значение

                matrix[0][0] = None # здесь можно вставить любое значение в любую ячейку

        return matrix
    def get_matrix_str(self, matrix): # оформление в виде матрицы
        string = []
        for row in matrix:
            string.append(str(row))
        return '\n'.join(string)
    def __str__(self):
        return self.get_matrix_str(self.matrix)

row = int (input('Ведите количество строк:'))
column = int (input('Ведите количество столбцов:'))

X = Matrix(row, column)
print(X)




